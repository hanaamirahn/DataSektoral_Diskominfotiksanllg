# -*- coding: utf-8 -*-
"""dinkes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SHymsgsJ-WZnKHwwZ73VbKaVhM_NXLaP
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""# **Data Wragling**

**Gathering Data**
"""

dinkes_df = pd.read_csv("/content/Dinkes.csv")
print(dinkes_df.shape)
print(dinkes_df)

"""**Assessing Data**"""

# Menampilkan informasi pada dataset
dinkes_df.info()

# Memeriksa missing value
dinkes_df.isna().sum()

# Memeriksa duplikasi data
print("Jumlah duplikasi: ", dinkes_df.duplicated().sum())

"""**Cleaning Data**"""

# Menghapus kolom yang tidak diperlukan
dinkes_df = dinkes_df.drop(columns=["Keterangan"])
print(dinkes_df)

# Mengubah semua nama kolom menjadi string
dinkes_df.columns = dinkes_df.columns.map(str)
print(dinkes_df)

# Save data clean
dinkes_df.to_csv('dinkes_clean.csv', index=False)

"""# **Exploratory Data Analysis (EDA)**"""

# Melihat Jumlah Penyakit Menular
# Filter baris yang mengandung kata 'Penderita' = penyakit menular
penyakit_menular = dinkes_df[dinkes_df['Jenis Data'].str.contains("Penderita", case=False)]

# Jumlahkan nilainya
total_penyakit_2024 = penyakit_menular['2024'].sum()

# Buat tabel jumlah per penyakit
penyakit_menular_rincian = penyakit_menular[['Jenis Data', '2024']].copy()
penyakit_menular_rincian.columns = ['Jenis Penyakit Menular', 'Tahun 2024']

# Tambahkan baris total ke dalam tabel
total_row = pd.DataFrame({
    'Jenis Penyakit Menular': ['Total Semua Penyakit Menular'],
    'Tahun 2024': [total_penyakit_2024]
})

# Gabungkan
penyakit_menular_rincian = pd.concat([penyakit_menular_rincian, total_row], ignore_index=True)

# Tampilkan
print(penyakit_menular_rincian)

# Melihat Jumlah Balita Wasting dan Stunting
# Filter baris yang mengandung kata 'Balita'
balita_df = dinkes_df[dinkes_df['Jenis Data'].str.contains("Balita", case=False)]

print("Jumlah Balita Wasting dan Stunting 2024:")
print(balita_df[['Jenis Data', '2024']])

# Melihat Jumlah Tenaga Medis
# Filter baris yang mengandung kata 'Dokter'
tenagamedis_df = dinkes_df[dinkes_df['Jenis Data'].str.contains("Dokter", case=False)]

print("Jumlah Tenaga Medis Tahun 2024:")
print(tenagamedis_df[['Jenis Data', '2024']])

# Melihat Jumlah Tenaga Kesehatan
# Filter berdasarkan kata kunci yang berhubungan dengan tenaga kesehatan
nakes_keywords = ['Bidan', 'Perawat', 'Apoteker', 'Teknis Kefarmasian', 'Psikologis Klinis']
pattern = '|'.join(nakes_keywords)

# Filter data berdasarkan pola
nakes_df = dinkes_df[dinkes_df['Jenis Data'].str.contains(pattern, case=False)]

# Tampilkan hasil
print("Jumlah Tenaga Kesehatan Tahun 2024:")
print(nakes_df[['Jenis Data', '2024']])

total_nakes = nakes_df['2024'].sum()
print("\nTotal Semua Tenaga Kesehatan Tahun 2024:", total_nakes)

"""# **Visualization & Explanatory Analysis**"""

# Visualisasi Jumlah Penyakit Menular
# Filter data penyakit menular
penyakit_menular = dinkes_df[dinkes_df['Jenis Data'].str.contains("Penderita", case=False)].copy()
penyakit_menular = penyakit_menular[['Jenis Data', '2024']]
penyakit_menular.columns = ['Jenis Penyakit Menular', 'Jumlah Tahun 2024']

# Visualisasi horizontal bar chart
penyakit_menular = penyakit_menular.sort_values(by='Jumlah Tahun 2024', ascending=True)

plt.figure(figsize=(10, 6))
sns.set_style("whitegrid")
sns.barplot(
    data=penyakit_menular,
    x='Jumlah Tahun 2024',
    y='Jenis Penyakit Menular',
    palette='flare'
)

# Tambahkan label nilai pada ujung bar
for index, value in enumerate(penyakit_menular['Jumlah Tahun 2024']):
    plt.text(value + 5, index, str(int(value)), va='center', fontsize=9)

# Tambahkan judul dan label
plt.title('Jumlah Penyakit Menular Tahun 2024 per Jenis', fontsize=14, weight='bold')
plt.xlabel('Jumlah Kasus')
plt.ylabel('Jenis Penyakit Menular')
plt.tight_layout()
plt.show()

# Visualisasi Jumlah Balita Wasting dan Stunting
# Ambil data balita wasting dan stunting
wasting_stunting = dinkes_df[dinkes_df['Jenis Data'].str.contains("Wasting|Stunting", case=False)].copy()
wasting_stunting = wasting_stunting[['Jenis Data', '2024']]
wasting_stunting.columns = ['Kategori', 'Jumlah Tahun 2024']

# Pie chart kreatif dengan eksplodasi slice
colors = sns.color_palette("pastel")[0:2]
explode = [0.05] * len(wasting_stunting)

# Tambahkan angka jumlah ke dalam label
labels_with_values = [
    f"{row['Kategori']} ({int(row['Jumlah Tahun 2024'])})"
    for _, row in wasting_stunting.iterrows()
]

plt.figure(figsize=(8, 6))
plt.pie(
    wasting_stunting['Jumlah Tahun 2024'],
    labels=labels_with_values,
    autopct='%1.1f%%',
    startangle=140,
    explode=explode,
    colors=colors,
    shadow=True
)

plt.title('Distribusi Jumlah Balita Wasting dan Stunting Tahun 2024', fontsize=14, weight='bold')
plt.tight_layout()
plt.show()

# Visualisasi Jumlah Tenaga Medis Tahun 2024
# Filter tenaga medis, misalnya: Dokter Umum, Dokter Gigi, Dokter Spesialis
tenaga_medis_keywords = ['Dokter Umum', 'Dokter Gigi', 'Dokter Spesialis']
pattern_medis = '|'.join(tenaga_medis_keywords)

tenaga_medis_df = dinkes_df[dinkes_df['Jenis Data'].str.contains(pattern_medis, case=False)].copy()
tenaga_medis_df = tenaga_medis_df[['Jenis Data', '2024']]
tenaga_medis_df.columns = ['Jenis Tenaga Medis', 'Jumlah Tahun 2024']
tenaga_medis_df = tenaga_medis_df.sort_values(by='Jumlah Tahun 2024', ascending=True)

# Membuat horizontal bar chart kreatif
plt.figure(figsize=(9, 5))
sns.set_style("whitegrid")
sns.barplot(
    data=tenaga_medis_df,
    x='Jumlah Tahun 2024',
    y='Jenis Tenaga Medis',
    palette='light:#5A9'
)

# Tambahkan angka pada ujung bar
for index, value in enumerate(tenaga_medis_df['Jumlah Tahun 2024']):
    plt.text(value + 5, index, str(int(value)), va='center', fontsize=9)

# Judul dan label
plt.title('Jumlah Tenaga Medis Tahun 2024 per Jenis', fontsize=14, weight='bold')
plt.xlabel('Jumlah')
plt.ylabel('Tenaga Medis')
plt.tight_layout()
plt.show()

# Visualisasi Jumlah Tenaga Kesehatan Tahun 2024
# Filter data untuk tenaga kesehatan
nakes_keywords = ['Bidan', 'Perawat', 'Apoteker', 'Teknis Kefarmasian', 'Psikolog Klinis']
pattern_nakes = '|'.join(nakes_keywords)

nakes_df = dinkes_df[dinkes_df['Jenis Data'].str.contains(pattern_nakes, case=False)].copy()
nakes_df = nakes_df[['Jenis Data', '2024']]
nakes_df.columns = ['Jenis Tenaga Kesehatan', 'Jumlah Tahun 2024']

# Label kategori + angka
labels = [
    f"{row['Jenis Tenaga Kesehatan']} ({int(row['Jumlah Tahun 2024'])})"
    for _, row in nakes_df.iterrows()
]

# Warna
colors = sns.color_palette("pastel")[:len(nakes_df)]

# Buat donut chart
plt.figure(figsize=(8, 8))
wedges, texts, autotexts = plt.pie(
    nakes_df['Jumlah Tahun 2024'],
    labels=labels,
    autopct='%1.1f%%',
    startangle=140,
    colors=colors,
    wedgeprops=dict(width=0.4),  # ini membuat 'donut'
    pctdistance=0.85
)

# Tengah lingkaran diberi warna putih agar membentuk donut
centre_circle = plt.Circle((0, 0), 0.70, fc='white')
fig = plt.gcf()
fig.gca().add_artist(centre_circle)

# Judul dan layout
plt.title('Jumlah Tenaga Kesehatan Tahun 2024', fontsize=14, weight='bold')
plt.tight_layout()
plt.show()